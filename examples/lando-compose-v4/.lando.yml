name: lando-compose-v4
tooling:
  pwd:
    service: web2
  pwd2:
    service: web3
    cmd: pwd
services:
  web1:
    type: php:8.2

  web2:
    api: 4
    primary: true
    image: nginx:1.15
    working_dir: /tmp
    networks:
      test:
    volumes:
      - test:/test_volume
      - ./:/app2
      - /tmp

  web3:
    api: 4
    primary: true
    image: nginx:1.15
    working_dir: /tmp
    networks:
      test:
    volumes:
      - test:/test_volume
      - /tmp

  # web3:
  #   api: 4
  #   primary: true

  #   working_dir: /tmp

  #   image:
  #     dockerfile: nginx:1.15
  #     context:
  #       - ./folder
  #       - ./folder:thing
  #       - file1:/file2
  #       - src: file1
  #         dest: file3
  #       - source: file1
  #         destination: file4
  #         instruction: COPY file1 /file-this-4

  #       - source: file1
  #         destination: file4
  #         instruction:
  #           - COPY file1 /file-this-4

  #       - source: file1
  #         destination: file6
  #         owner: nginx:nginx
  #         permissions: 777

  #       - source: file1
  #         destination: file7
  #         user: nginx
  #         group: nginx
  #         perms: 777

  #       - source: ./images/Dockerfile

  #       - source: https://raw.githubusercontent.com/lando/lando/main/PRIVACY.md
  #       - source: https://raw.githubusercontent.com/lando/lando/main/PRIVACY.md
  #         dest: /tmp/private.md

  #     groups:
  #       - bob: 99

  #       - name: 'configure'
  #         description: 'configure linux packages? certs? php-extensions'
  #         user: root
  #         stage: image

  #       - name: 'configure-me-first'
  #         description: 'configure linux packages? certs? php-extensions'
  #         user: root
  #         weight: -100

  #     steps:
  #      # raw pass in
  #       - instructions: |
  #           COPY file4 /file2
  #           RUN touch /me

  #       - instructions:
  #         - env:
  #             key1: value3
  #             key2: value3
  #         - run: env
  #         - run:
  #           - 'stat'
  #           - '/file2'

  #       # default stage?
  #       - instructions: |
  #           ENV TEST=3
  #           RUN env

  #       # custom weights
  #       - instructions: RUN cat /stuff
  #         weight: 1001
  #       - instructions: |
  #           RUN echo "test" > /stuff
  #         weight: 999
  #       - instructions: |
  #           RUN echo "test" > /stuff2
  #         weight: 1
  #       - instructions: |
  #            RUN cat /stuff2
  #         weight: 9999

  #       - group: bob-4-nginx-before
  #         instructions: |
  #            RUN env

  #       - group: bob-after-3
  #         instructions: |
  #            RUN env

  #       - group: bob-nginx-4-after
  #         instructions: |
  #            RUN env

  #       - group: bob-nginx-4-after
  #         instructions: |
  #            RUN env

  #       - group: bob-3
  #         instructions: |
  #            RUN env



  #       - group: frank
  #         instructions: |
  #            RUN env
  #       - group: bob
  #         instructions: |
  #            RUN env
  #       - group: configure
  #         instructions: |
  #            RUN echo "BOB=BOBBED > /etc/environment"

  #       - group: default
  #         instructions: |
  #           ENV TEST=1
  #       - group: default
  #         instructions:
  #           - run: 'env'

  #       - group: default
  #         instructions: |
  #           ENV TEST=1

        # - group: init-3-after/before-user
        #   instructions:
        #     - run: other tihg
        #     - env:
        #         key1: value3
        #         key2: value3

        # using a new one
        # no weight = end of the groups?
        # - instructions:
        #   - run: other tihg
        #   - env:
        #       key1: value3
        #       key2: value3
        #   weight: 100


    environment:
      HELLO: there
    ports:
      - 80

  # web20:
  #   api: 4
  #   image: |
  #     FROM nginx:1.17
  #     ENV LANDO_RUN 6
  #     RUN apt-get update -y && apt-get install openssl -y
  #   ports:
  #     - 80


  # web40:
  #   api: 4
  #   build:
  #     dockerfile: |
  #       FROM nginx:1.20
  #       ENV LANDO_RUN 6
  #       RUN apt-get update -y && apt-get install openssl -y

  # web50:
  #   api: 4
  #   ports:
  #     - 80
  #   build:
  #     dockerfile: ./images/Dockerfile

volumes:
  test:
networks:
  test:

